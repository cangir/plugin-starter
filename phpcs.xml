<?xml version="1.0"?>
<ruleset name="Dino Framework Coding Standards">

    <description>Apply WordPress Coding Standards to Dialogue</description>

    <!-- Scan these files -->
    <file>.</file>

    <!-- Whenever possible, cache the scan results and re-use those for unchanged files on the next scan. -->
    <arg name="cache" value=".phpcs-cache"/>

    <!-- Show colors in console -->
    <arg name="colors"/>

    <!-- Don't show warnings -->
    <arg value="nps"/>

    <!-- Directories and third party library exclusions. -->
    <exclude-pattern>/vendor/*</exclude-pattern>
    <exclude-pattern>/node_modules/*</exclude-pattern>
    <exclude-pattern>/dist/*</exclude-pattern>
    <exclude-pattern>/dist-product/*</exclude-pattern>

    <!-- Use the WordPress Ruleset -->
    <rule ref="WordPress">
        <include-pattern>*\.php$</include-pattern>
    </rule>

    <!--
        Verify that the text_domain is set to the desired text-domain.
        Multiple valid text domains can be provided as a comma-delimited list.
    -->
    <rule ref="WordPress.WP.I18n">
        <properties>
            <property name="text_domain" type="array" value="plugin-name"/>
        </properties>
    </rule>

    <!-- Include the WordPress-Extra standard. -->
    <rule ref="WordPress-Extra">
        <!-- Exclude any rules here -->
        <exclude name="WordPress.PHP.DisallowShortTernary"/>
    </rule>

    <!-- Let's also check that everything is properly documented. -->
    <rule ref="WordPress-Docs"/>

    <!-- Add in some extra rules from other standards. -->
    <rule ref="Generic.CodeAnalysis.UnusedFunctionParameter"/>
    <rule ref="Generic.Commenting.Todo"/>

    <config name="minimum_supported_wp_version" value="4.9"/>

    <!-- 
        Exclude checking of line endings when reporting errors, but fix them
        when running phpcbf.
    -->
    <rule ref="Generic.Files.LineEndings">
        <exclude phpcs-only="true" name="Generic.Files.LineEndings"/>
    </rule>

</ruleset>
